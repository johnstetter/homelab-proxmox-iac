# Terraform Backend Configuration
backend_bucket_name     = "k8s-infra-terraform-state"
backend_key            = "k8s-infra/terraform.tfstate"
backend_region         = "us-east-1"
backend_dynamodb_table = "k8s-infra-terraform-locks"
backend_encrypt        = true

# Proxmox Provider Configuration
proxmox_api_url          = "https://your-proxmox-server:8006/api2/json"
proxmox_api_token_id     = "terraform@pve!terraform"
proxmox_api_token_secret = "your-api-token-secret-here"
proxmox_tls_insecure     = true
proxmox_parallel         = 2
proxmox_timeout          = 300
proxmox_debug            = false

# Cluster Configuration
cluster_name = "k8s-cluster"
environment  = "dev"

# Proxmox Infrastructure
proxmox_node = "pve"
vm_template  = "nixos-2311-cloud-init"  # NixOS template (to be created with nixos-generators)
disk_storage = "local-lvm"

# Control Plane Configuration
control_plane_count      = 3
control_plane_cores      = 2
control_plane_memory     = 4096
control_plane_disk_size  = "50G"
control_plane_ip_base    = "192.168.1.10"

# Worker Node Configuration
worker_node_count      = 3
worker_node_cores      = 4
worker_node_memory     = 8192
worker_node_disk_size  = "100G"
worker_node_ip_base    = "192.168.1.20"

# Load Balancer Configuration (optional)
enable_load_balancer      = false
load_balancer_cores       = 1
load_balancer_memory      = 2048
load_balancer_disk_size   = "20G"
load_balancer_ip          = "192.168.1.100"

# Network Configuration
network_bridge  = "vmbr0"
network_vlan    = null
network_cidr    = "24"
network_gateway = "192.168.1.1"
nameserver      = "8.8.8.8"

# SSH Configuration
ssh_user = "nixos"  # Default user for NixOS

# Kubernetes Configuration
kubernetes_api_port = 6443
kubernetes_version  = "1.28.0"
pod_subnet         = "10.244.0.0/16"
service_subnet     = "10.96.0.0/12"

# Example IP allocation:
# Control Plane nodes: 192.168.1.101, 192.168.1.102, 192.168.1.103
# Worker nodes: 192.168.1.201, 192.168.1.202, 192.168.1.203
# Load Balancer: 192.168.1.100 (if enabled)
#
# DEPRECATED: Use environment-specific files instead
#
# For new deployments, use:
# - environments/dev.tfvars for development environment
# - environments/prod.tfvars for production environment
#
# Usage:
# terraform plan -var-file="environments/dev.tfvars"
# terraform apply -var-file="environments/dev.tfvars"
#
# To use this example file (legacy):
# 1. Copy this file to terraform.tfvars
# 2. Update the values according to your environment
# 3. Ensure your Proxmox API token has sufficient permissions
# 4. Create NixOS VM template using nixos-generators (Phase 2)
# 5. Verify network configuration matches your Proxmox setup
# 6. Configure NixOS files in ../nixos/ directory
